{
    "docs": [
        {
            "location": "/", 
            "text": "StashCache\n\n\nThis documentation is for Site Admins and OSG Operations team who manage StashCache nodes (origin or cache server; or redirectors). Main functionality of StashCache is based on \nXRootD\n technology, there are other components involved to function StashCache properly, though. E.g. if you are a user of \n\"stashcp\"\n you want to follow \nthis\n document instead.\n\n\n\n\nStashCache operations consist of the following documents:\n\n\n\n\nStashCache caches\n: Managed by an organization, \n\"cache\"\n server to keep data cached and immediately available (via \nstashcp\n)within Stash federation (without re-transfering from \"origin\").\n\n\nStashCache origins\n: Managed by an organization, \n\"origin\"\n is data server to host files locally and serve them to users upon transfer request (via \nstashcp\n) unless data are already cached.\n\n\nStashCache redirectors\n: Redirectors are managed by GOC Operations team at Indiana University, redirectors provides federated access to the data across origins.\n\n\nStashCache upgrades\n: Keeps track of versions deployed at sites as well as other information about OS, system resources, connectivity, etc.", 
            "title": "Home"
        }, 
        {
            "location": "/#stashcache", 
            "text": "This documentation is for Site Admins and OSG Operations team who manage StashCache nodes (origin or cache server; or redirectors). Main functionality of StashCache is based on  XRootD  technology, there are other components involved to function StashCache properly, though. E.g. if you are a user of  \"stashcp\"  you want to follow  this  document instead.   StashCache operations consist of the following documents:   StashCache caches : Managed by an organization,  \"cache\"  server to keep data cached and immediately available (via  stashcp )within Stash federation (without re-transfering from \"origin\").  StashCache origins : Managed by an organization,  \"origin\"  is data server to host files locally and serve them to users upon transfer request (via  stashcp ) unless data are already cached.  StashCache redirectors : Redirectors are managed by GOC Operations team at Indiana University, redirectors provides federated access to the data across origins.  StashCache upgrades : Keeps track of versions deployed at sites as well as other information about OS, system resources, connectivity, etc.", 
            "title": "StashCache"
        }, 
        {
            "location": "/admin/install/", 
            "text": "Installation Guide\n\n\nThis document describes how to install a StashCache service (Origin or Cache). The installation utilizes XRootD and HTCondor for file storage and monitoring, respectively. The role of the Origin and Cache is different, following explanation may help to decide when would you need to install which:\n\n\n\n\nStashCache cache\n: role of \n\"cache\"\n server is to keep data cached and immediately available (via \nstashcp\n)within Stash federation (without re-transfering from \"origin\").\n\n\nStashCache origin\n: \n\"origin\"\n is data server to host files locally and serve them to users upon transfer request (via \nstashcp\n) unless data are already cached.\n\n\n\n\n\n\nInstallation pre-requisities for Origin and Cache\n\n\nBefore starting the installation process, consider the following mandatory points:\n\n\n\n\nUser IDs:\n If they do not exist already, the installation will create the Linux user IDs condor and xrootd\n\n\nService certificate:\n The StashCache service uses a host certificate at \n/etc/grid-security/host*.pem\n\n\nNetwork ports:\n The StashCache service must listen on ports:\n\n\nthe central collector on port \n9619 (TCP)\n \n\n\nXRootD service on port \n1094 (TCP)\n\n\nand allow XRootD service over HTTP on port \n8000 (TCP)\n\n\n\n\n\n\nHardware requirements:\n We recommend that a StashCache server has at least 10Gbps connectivity, 1TB of disk space, and 8GB of RAM. \n\n\nMore information about hardware and system configuration of existing caches you can find at \nUpgrade status page\n.\n\n\n\n\n\n\n\n\nIf installing the (optional) authenticated StashCache, you need to do in addition the following:\n\n\n\n\n\n\nService certificate:\n create copy of the certificate to \n/etc/grid-security/xrd/xrd{cert,key}.pem\n\n\n\n\nset owner of the directory \n/etc/grid-security/xrd/\n to \nxrootd:xrootd\n user:\n$ chown -R xrootd:xrootd /etc/grid-security/xrd/\n\n\n\n\n\n\n\n\n\n\n\nNetwork ports\n: allow connections on port \n8443 (TCP)\n \n\n\n\n\n\n\nAs with all OSG software installations, there are some one-time steps to prepare in advance:\n\n\n\n\nEnsure the host has \na supported operating system\n\n\nObtain root access to the host\n\n\nPrepare \nthe required Yum repositories\n\n\nInstall \nCA certificates\n\n\n\n\nInstalling the StashCache metapackage\n\n\nThe StashCache daemon consists of an XRootD server and an HTCondor-based service for collecting and reporting statistics about the cache. To simplify installation, OSG provides convenience RPMs that install all required software with a single command:\n\n\n\n\n\n\nClean yum cache:\n\n\n[root@client ~]$ yum clean all --enablerepo=*\n\n\n\n\n\n\n\nUpdate software, this command will update all packages on your system:\n\n\n[root@client ~]$ yum update\n\n\n\n\n\n\n\nInstall the StashCache metapackage from OSG repository:\n\n\n\n\n\n\nif you are installing \nOrigin server\n:\n\n\n[root@client ~]$ yum install stashcache-daemon fetch-crl stashcache-cache-origin\n\n\n\n\n\n\n\nif you are installing \nCache server\n:\n\n\n[root@client ~]$ yum install stashcache-daemon fetch-crl stashcache-cache-server\n\n\n\n\n\n\n\n\n\nNote\n\n\nIf installing authenticated StashCache Cache server, you need additional packages to be installed:\n\n\n[root@client ~]$ yum install xrootd-lcmaps globus-proxy-utils\n\n\n\n\n\n\n\n\n\nMount the disk that will be used for the cache to \n/stash\n and set owner of the directory to \nxrootd:xrootd\n user.", 
            "title": "Install"
        }, 
        {
            "location": "/admin/install/#installation-guide", 
            "text": "This document describes how to install a StashCache service (Origin or Cache). The installation utilizes XRootD and HTCondor for file storage and monitoring, respectively. The role of the Origin and Cache is different, following explanation may help to decide when would you need to install which:   StashCache cache : role of  \"cache\"  server is to keep data cached and immediately available (via  stashcp )within Stash federation (without re-transfering from \"origin\").  StashCache origin :  \"origin\"  is data server to host files locally and serve them to users upon transfer request (via  stashcp ) unless data are already cached.", 
            "title": "Installation Guide"
        }, 
        {
            "location": "/admin/install/#installation-pre-requisities-for-origin-and-cache", 
            "text": "Before starting the installation process, consider the following mandatory points:   User IDs:  If they do not exist already, the installation will create the Linux user IDs condor and xrootd  Service certificate:  The StashCache service uses a host certificate at  /etc/grid-security/host*.pem  Network ports:  The StashCache service must listen on ports:  the central collector on port  9619 (TCP)    XRootD service on port  1094 (TCP)  and allow XRootD service over HTTP on port  8000 (TCP)    Hardware requirements:  We recommend that a StashCache server has at least 10Gbps connectivity, 1TB of disk space, and 8GB of RAM.   More information about hardware and system configuration of existing caches you can find at  Upgrade status page .     If installing the (optional) authenticated StashCache, you need to do in addition the following:    Service certificate:  create copy of the certificate to  /etc/grid-security/xrd/xrd{cert,key}.pem   set owner of the directory  /etc/grid-security/xrd/  to  xrootd:xrootd  user: $ chown -R xrootd:xrootd /etc/grid-security/xrd/      Network ports : allow connections on port  8443 (TCP)      As with all OSG software installations, there are some one-time steps to prepare in advance:   Ensure the host has  a supported operating system  Obtain root access to the host  Prepare  the required Yum repositories  Install  CA certificates", 
            "title": "Installation pre-requisities for Origin and Cache"
        }, 
        {
            "location": "/admin/install/#installing-the-stashcache-metapackage", 
            "text": "The StashCache daemon consists of an XRootD server and an HTCondor-based service for collecting and reporting statistics about the cache. To simplify installation, OSG provides convenience RPMs that install all required software with a single command:    Clean yum cache:  [root@client ~]$ yum clean all --enablerepo=*    Update software, this command will update all packages on your system:  [root@client ~]$ yum update    Install the StashCache metapackage from OSG repository:    if you are installing  Origin server :  [root@client ~]$ yum install stashcache-daemon fetch-crl stashcache-cache-origin    if you are installing  Cache server :  [root@client ~]$ yum install stashcache-daemon fetch-crl stashcache-cache-server     Note  If installing authenticated StashCache Cache server, you need additional packages to be installed:  [root@client ~]$ yum install xrootd-lcmaps globus-proxy-utils     Mount the disk that will be used for the cache to  /stash  and set owner of the directory to  xrootd:xrootd  user.", 
            "title": "Installing the StashCache metapackage"
        }, 
        {
            "location": "/admin/configure-cache/", 
            "text": "Configuring Cache Server\n\n\nPackages installed: \nstashcache-daemon fetch-crl stashcache-cache-server\n\n\nThe following section describes required configuration to have a functional non-authenticated StashCache Cache (not origin server!). StashCache Cache package \nstashcache-cache-server\n needs to be manually configured from pre-existing XRootD configuration.\n\n\n\n\nNote\n\n\nWhile example of the configuration file below provides combination of \nauthenticated\n and \nnon-authenticated\n \nCache\n, the non-authenticated cache is considered to be default and authenticated cache just optional (additional) service. If you're about to configure in addition \nauthenticated cache\n read to the end of this document and then follow post-installation of \nauthenticated part here\n.\n\n\n\n\nFor configuring \ncache\n one needs to define directive \npss.origin redirector.osgstorage.org:1024\n (not \nall.manager redirector.osgstorage.org+ 1213\n directive as it is in case of \nconfiguring origin\n). \n\nStashCache-daemon\n package provides default configuration file \n/etc/xrootd/xrootd-stashcache-cache-server.cfg\n. Example of the configuration of cache server is as follows:\n\n\nall.export  /\nset cachedir = /stash\nxrd.allow host *\nsec.protocol  host\nall.adminpath /var/spool/xrootd\n\nxrootd.trace emsg login stall redirect\nofs.trace all\nxrd.trace all\ncms.trace all\n\nofs.osslib  libXrdPss.so\npss.origin redirector.osgstorage.org:1094\npss.cachelib libXrdFileCache.so\npss.setopt DebugLevel 1\n\noss.localroot $(cachedir)\n\n# Config for v1 (xrootd \n=v4.5.0)\n#pfc.nramprefetch 4\n#pfc.nramread 4\n#pfc.diskusage 0.98 0.99\n\n# Config for v2 (xrootd \nv4.5.0)\npfc.blocksize 512k\npfc.ram       32g\npfc.prefetch  10\npfc.diskusage 0.98 0.99\n\nxrootd.seclib /usr/lib64/libXrdSec.so\nsec.protocol /usr/lib64 gsi \\\n  -certdir:/etc/grid-security/certificates \\\n  -cert:/etc/grid-security/xrd/xrdcert.pem \\\n  -key:/etc/grid-security/xrd/xrdkey.pem \\\n  -crl:1 \\\n  -authzfun:libXrdLcmaps.so \\\n  -authzfunparms:--lcmapscfg,/etc/xrootd/lcmaps.cfg,--loglevel,4|useglobals \\\n  -gmapopt:10 \\\n  -authzto:3600\n\n# Enable the authorization module, even if we have an unauthenticated instance.\nofs.authorize 1\nacc.audit deny grant\n\n# Run the authenticated instance on port 8443 (Xrootd and HTTPS)\n# Notice authenticated and unauthenticated instances use separate auth\n# files.\nif named stashcache-cache-server-auth\n   #pss.origin  red-gridftp4.unl.edu:1094\n   xrd.port 8443\n   acc.authdb /etc/xrootd/Authfile-auth\n   sec.protbind * gsi\n   xrd.protocol http:8443 libXrdHttp.so\n   pss.origin xrootd-local.unl.edu:1094\nelse\n# Unauthenticated instance runs on port 1094 (Xrootd) and 8000 (HTTP/HTTPS)\n   acc.authdb /etc/xrootd/Authfile-noauth\n   #sec.protbind * none\n   sec.protbind  * none\n   xrd.protocol http:8000 libXrdHttp.so\nfi\n\nhttp.cadir /etc/grid-security/certificates\nhttp.cert /etc/grid-security/xrd/xrdcert.pem\nhttp.key /etc/grid-security/xrd/xrdkey.pem\nhttp.secxtractor /usr/lib64/libXrdLcmaps.so\nhttp.listingdeny yes\nhttp.staticpreload http://static/robots.txt /etc/xrootd/stashcache-robots.txt\n\n# Tune the client timeouts to more aggressively timeout.\npss.setopt ParallelEvtLoop 10\npss.setopt RequestTimeout 25\npss.setopt ConnectTimeout 25\npss.setopt ConnectionRetry 2\n\n#Sending monitoring information\nxrd.report uct2-collectd.mwt2.org:9931\nxrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930\n\nall.sitename Nebraska\n\n# Optional configuration\n# Remote debugging\nxrootd.diglib * /etc/xrootd/digauth.cf\n\n\n\n\nAdd Authfile for non-authenticated cache\n\n\nIn Authfile you want to allow local reads below \n$(cachedir)\n defined in the main config. Example of Authfile:\n\n\n   [root@client ~]$ cat /etc/xrootd/Authfile-noauth \n   u * /user/ligo -rl / rl\n\n\n\n\nAdd Robots file\n\n\n   [root@client ~]$ cat /etc/xrootd/stashcache-robots.txt \n   User-agent: *\n   Disallow: /\n\n\n\n\nRHEL7\n\n\nOn RHEL7 system, you need to run following systemd unit:\n\n \nsystemctl start xrootd@stashcache-cache-server.service\n\n\n \nsystemctl start condor.service\n\n\nPlease, refer to \nstart services document\n for more information.\n\n\nRHEL6\n\n\n...to be added, old doc for RHEL6 configuration resides temporarily \nhere\n.\n\n\nWhen ready with configuration, please \nregister\n and \nstart\n your StashCache Cache server.\nIf you'd like to configure in addition authenticated cache instance, please follow \nthis\n document.", 
            "title": "Configure cache"
        }, 
        {
            "location": "/admin/configure-cache/#configuring-cache-server", 
            "text": "Packages installed:  stashcache-daemon fetch-crl stashcache-cache-server  The following section describes required configuration to have a functional non-authenticated StashCache Cache (not origin server!). StashCache Cache package  stashcache-cache-server  needs to be manually configured from pre-existing XRootD configuration.   Note  While example of the configuration file below provides combination of  authenticated  and  non-authenticated   Cache , the non-authenticated cache is considered to be default and authenticated cache just optional (additional) service. If you're about to configure in addition  authenticated cache  read to the end of this document and then follow post-installation of  authenticated part here .   For configuring  cache  one needs to define directive  pss.origin redirector.osgstorage.org:1024  (not  all.manager redirector.osgstorage.org+ 1213  directive as it is in case of  configuring origin ).  StashCache-daemon  package provides default configuration file  /etc/xrootd/xrootd-stashcache-cache-server.cfg . Example of the configuration of cache server is as follows:  all.export  /\nset cachedir = /stash\nxrd.allow host *\nsec.protocol  host\nall.adminpath /var/spool/xrootd\n\nxrootd.trace emsg login stall redirect\nofs.trace all\nxrd.trace all\ncms.trace all\n\nofs.osslib  libXrdPss.so\npss.origin redirector.osgstorage.org:1094\npss.cachelib libXrdFileCache.so\npss.setopt DebugLevel 1\n\noss.localroot $(cachedir)\n\n# Config for v1 (xrootd  =v4.5.0)\n#pfc.nramprefetch 4\n#pfc.nramread 4\n#pfc.diskusage 0.98 0.99\n\n# Config for v2 (xrootd  v4.5.0)\npfc.blocksize 512k\npfc.ram       32g\npfc.prefetch  10\npfc.diskusage 0.98 0.99\n\nxrootd.seclib /usr/lib64/libXrdSec.so\nsec.protocol /usr/lib64 gsi \\\n  -certdir:/etc/grid-security/certificates \\\n  -cert:/etc/grid-security/xrd/xrdcert.pem \\\n  -key:/etc/grid-security/xrd/xrdkey.pem \\\n  -crl:1 \\\n  -authzfun:libXrdLcmaps.so \\\n  -authzfunparms:--lcmapscfg,/etc/xrootd/lcmaps.cfg,--loglevel,4|useglobals \\\n  -gmapopt:10 \\\n  -authzto:3600\n\n# Enable the authorization module, even if we have an unauthenticated instance.\nofs.authorize 1\nacc.audit deny grant\n\n# Run the authenticated instance on port 8443 (Xrootd and HTTPS)\n# Notice authenticated and unauthenticated instances use separate auth\n# files.\nif named stashcache-cache-server-auth\n   #pss.origin  red-gridftp4.unl.edu:1094\n   xrd.port 8443\n   acc.authdb /etc/xrootd/Authfile-auth\n   sec.protbind * gsi\n   xrd.protocol http:8443 libXrdHttp.so\n   pss.origin xrootd-local.unl.edu:1094\nelse\n# Unauthenticated instance runs on port 1094 (Xrootd) and 8000 (HTTP/HTTPS)\n   acc.authdb /etc/xrootd/Authfile-noauth\n   #sec.protbind * none\n   sec.protbind  * none\n   xrd.protocol http:8000 libXrdHttp.so\nfi\n\nhttp.cadir /etc/grid-security/certificates\nhttp.cert /etc/grid-security/xrd/xrdcert.pem\nhttp.key /etc/grid-security/xrd/xrdkey.pem\nhttp.secxtractor /usr/lib64/libXrdLcmaps.so\nhttp.listingdeny yes\nhttp.staticpreload http://static/robots.txt /etc/xrootd/stashcache-robots.txt\n\n# Tune the client timeouts to more aggressively timeout.\npss.setopt ParallelEvtLoop 10\npss.setopt RequestTimeout 25\npss.setopt ConnectTimeout 25\npss.setopt ConnectionRetry 2\n\n#Sending monitoring information\nxrd.report uct2-collectd.mwt2.org:9931\nxrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930\n\nall.sitename Nebraska\n\n# Optional configuration\n# Remote debugging\nxrootd.diglib * /etc/xrootd/digauth.cf", 
            "title": "Configuring Cache Server"
        }, 
        {
            "location": "/admin/configure-cache/#add-authfile-for-non-authenticated-cache", 
            "text": "In Authfile you want to allow local reads below  $(cachedir)  defined in the main config. Example of Authfile:     [root@client ~]$ cat /etc/xrootd/Authfile-noauth \n   u * /user/ligo -rl / rl", 
            "title": "Add Authfile for non-authenticated cache"
        }, 
        {
            "location": "/admin/configure-cache/#add-robots-file", 
            "text": "[root@client ~]$ cat /etc/xrootd/stashcache-robots.txt \n   User-agent: *\n   Disallow: /", 
            "title": "Add Robots file"
        }, 
        {
            "location": "/admin/configure-cache/#rhel7", 
            "text": "On RHEL7 system, you need to run following systemd unit:   systemctl start xrootd@stashcache-cache-server.service    systemctl start condor.service  Please, refer to  start services document  for more information.", 
            "title": "RHEL7"
        }, 
        {
            "location": "/admin/configure-cache/#rhel6", 
            "text": "...to be added, old doc for RHEL6 configuration resides temporarily  here .  When ready with configuration, please  register  and  start  your StashCache Cache server.\nIf you'd like to configure in addition authenticated cache instance, please follow  this  document.", 
            "title": "RHEL6"
        }, 
        {
            "location": "/admin/configure-cache-auth/", 
            "text": "Configuring Cache Server with authentication\n\n\nBefore you continue, make sure \ndefault Cache Server\n is configured on first place. Enabling authenticated cache is optionali and additional do default cache instance. This chapter describes all the steps needed. \n\n\nPackages installed: \n    stashcache-daemon fetch-crl stashcache-cache-server xrootd-lcmaps globus-proxy-utils\n\n\nAuthenticated Cache server\n\n\nMake sure you've in place following pre-requisities from \ninstall step here\n:\n\n\n\n\n\n\nService certificate:\n create copy of the certificate to \n/etc/grid-security/xrd/xrd{cert,key}.pem\n\n\n\n\nSet owner of the directory \n/etc/grid-security/xrd/\n to \nxrootd:xrootd\n user:\n$ chown -R xrootd:xrootd /etc/grid-security/xrd/\n\n\n\n\n\n\n\n\n\n\n\nNetwork ports\n: allow connections on port \n8443 (TCP)\n \n\n\n\n\n\n\nBeware, authenticated cache requires presence of the \nconfig file\n \n/etc/xrootd/xrootd-stashcache-cache-server.cfg\n. \n\n\nNow, create symbolic link to existing configuration file with \n-auth\n postfix:\n\n\n[root@client ~]$ cd /etc/xrootd/\n[root@client ~]$ ln -s xrootd-stashcache-cache-server.cfg xrootd-stashcache-cache-server-auth.cfg\n\n\n\nRHEL7\n\n\nOn RHEL7 system, you need to configure and run following systemd units:\n\n \nxrootd@stashcache-cache-server-auth.service\n\n\n \nxrootd-renew-proxy.service\n\n\n \nxrootd-renew-proxy.timer\n\n\n \nfetch-crl-cron\n\n\nAuth.service\n\n\n\n\n\n\nEnable \nxrootd@stashcache-cache-server-auth.service\n instance:\n\n\n[root@client ~]$ systemctl enable xrootd@stashcache-cache-server-auth\n\n\n\n\n\n\n\nReload daemons:\n\n\n[root@client ~]$ systemctl daemon-reload\n\n\n\n\n\n\n\nProxy.service\n\n\n\n\nCreate the file with following content:\n\n\n\n\n[root@client ~]$ cat /usr/lib/systemd/system/xrootd-renew-proxy.service\n[Unit]\nDescription=Renew xrootd proxy\n\n[Service]\nUser=xrootd\nGroup=xrootd\nType = oneshot\nExecStart = /bin/grid-proxy-init -cert /etc/grid-security/xrd/xrdcert.pem -key /etc/grid-security/xrd/xrdkey.pem -out /tmp/x509up_xrootd -valid 48:00\n\n[Install]\nWantedBy=multi-user.target\n\n\n\n\n\n\nReload daemons:\n[root@client ~]$ systemctl daemon-reload\n\n\n\n\n\n\n\nProxy.timer\n\n\n\n\nCreate the file with following content:\n\n\n\n\n[root@client ~]$ cat /usr/lib/systemd/system/xrootd-renew-proxy.timer\n[Unit]\nDescription=Renew proxy every day at midnight\n\n[Timer]\nOnCalendar=*-*-* 00:00:00\nUnit=xrootd-renew-proxy.service\n\n[Install]\nWantedBy=multi-user.target\n\n\n\n\n\n\n\n\nEnable timer:\n\n\n[root@client ~]$ systemctl enable xrootd-renew-proxy.timer\n\n\n\n\n\n\n\nStart and check if timer is active and working:\n\n\n[root@client ~]$ systemctl start xrootd-renew-proxy.timer\n...\n[root@client ~]$ systemctl is-active xrootd-renew-proxy.timer\nactive\n[root@client ~]$ systemctl list-timers xrootd-renew-proxy*\nNEXT                         LEFT       LAST                         PASSED  UNIT                     ACTIVATES\nThu 2017-05-11 00:00:00 CDT  54min left Wed 2017-05-10 00:00:01 CDT  23h ago xrootd-renew-proxy.timer xrootd-renew-proxy.service\n\n\n\n\n\n\n\nReload daemons:\n\n\n[root@client ~]$ systemctl daemon-reload\n\n\n\n\n\n\n\nCRLs updates\n\n\nIt is very important to keep CRL list updated from cron:\n1. Enable fetch-crl-cron\n\n\n[root@client ~]$ systemctl enable fetch-crl-cron\n\n\n\n\n\n\n\n\nStart fetch-crl-cron\n\n\n[root@client ~]$ systemctl start fetch-crl-cron\n\n\n\n\n\n\n\nReload daemons:\n\n\n[root@client ~]$ systemctl daemon-reload\n\n\n\n\n\n\n\nRHEL6\n\n\n...to be added\n\n\nAdd Authfile for authenticated cache\n\n\nAuthfile for authenticated cache may differ from \n/etc/xrootd/Authfile-noauth\n defined in \nnon-authenticated cache configuration\n. Example:\n\n\n   [root@client ~]$ cat /etc/xrootd/Authfile-auth \n   g /osg/ligo /user/ligo r\n   u ligo /user/ligo lr / rl\n\n\n\n\nWhen ready with configuration, please \nregister\n and \nstart\n your StashCache Cache server.", 
            "title": "Configure cache auth"
        }, 
        {
            "location": "/admin/configure-cache-auth/#configuring-cache-server-with-authentication", 
            "text": "Before you continue, make sure  default Cache Server  is configured on first place. Enabling authenticated cache is optionali and additional do default cache instance. This chapter describes all the steps needed.   Packages installed: \n    stashcache-daemon fetch-crl stashcache-cache-server xrootd-lcmaps globus-proxy-utils", 
            "title": "Configuring Cache Server with authentication"
        }, 
        {
            "location": "/admin/configure-cache-auth/#authenticated-cache-server", 
            "text": "Make sure you've in place following pre-requisities from  install step here :    Service certificate:  create copy of the certificate to  /etc/grid-security/xrd/xrd{cert,key}.pem   Set owner of the directory  /etc/grid-security/xrd/  to  xrootd:xrootd  user: $ chown -R xrootd:xrootd /etc/grid-security/xrd/      Network ports : allow connections on port  8443 (TCP)      Beware, authenticated cache requires presence of the  config file   /etc/xrootd/xrootd-stashcache-cache-server.cfg .   Now, create symbolic link to existing configuration file with  -auth  postfix:  [root@client ~]$ cd /etc/xrootd/\n[root@client ~]$ ln -s xrootd-stashcache-cache-server.cfg xrootd-stashcache-cache-server-auth.cfg", 
            "title": "Authenticated Cache server"
        }, 
        {
            "location": "/admin/configure-cache-auth/#rhel7", 
            "text": "On RHEL7 system, you need to configure and run following systemd units:   xrootd@stashcache-cache-server-auth.service    xrootd-renew-proxy.service    xrootd-renew-proxy.timer    fetch-crl-cron", 
            "title": "RHEL7"
        }, 
        {
            "location": "/admin/configure-cache-auth/#authservice", 
            "text": "Enable  xrootd@stashcache-cache-server-auth.service  instance:  [root@client ~]$ systemctl enable xrootd@stashcache-cache-server-auth    Reload daemons:  [root@client ~]$ systemctl daemon-reload", 
            "title": "Auth.service"
        }, 
        {
            "location": "/admin/configure-cache-auth/#proxyservice", 
            "text": "Create the file with following content:   [root@client ~]$ cat /usr/lib/systemd/system/xrootd-renew-proxy.service\n[Unit]\nDescription=Renew xrootd proxy\n\n[Service]\nUser=xrootd\nGroup=xrootd\nType = oneshot\nExecStart = /bin/grid-proxy-init -cert /etc/grid-security/xrd/xrdcert.pem -key /etc/grid-security/xrd/xrdkey.pem -out /tmp/x509up_xrootd -valid 48:00\n\n[Install]\nWantedBy=multi-user.target   Reload daemons: [root@client ~]$ systemctl daemon-reload", 
            "title": "Proxy.service"
        }, 
        {
            "location": "/admin/configure-cache-auth/#proxytimer", 
            "text": "Create the file with following content:   [root@client ~]$ cat /usr/lib/systemd/system/xrootd-renew-proxy.timer\n[Unit]\nDescription=Renew proxy every day at midnight\n\n[Timer]\nOnCalendar=*-*-* 00:00:00\nUnit=xrootd-renew-proxy.service\n\n[Install]\nWantedBy=multi-user.target    Enable timer:  [root@client ~]$ systemctl enable xrootd-renew-proxy.timer    Start and check if timer is active and working:  [root@client ~]$ systemctl start xrootd-renew-proxy.timer\n...\n[root@client ~]$ systemctl is-active xrootd-renew-proxy.timer\nactive\n[root@client ~]$ systemctl list-timers xrootd-renew-proxy*\nNEXT                         LEFT       LAST                         PASSED  UNIT                     ACTIVATES\nThu 2017-05-11 00:00:00 CDT  54min left Wed 2017-05-10 00:00:01 CDT  23h ago xrootd-renew-proxy.timer xrootd-renew-proxy.service    Reload daemons:  [root@client ~]$ systemctl daemon-reload", 
            "title": "Proxy.timer"
        }, 
        {
            "location": "/admin/configure-cache-auth/#crls-updates", 
            "text": "It is very important to keep CRL list updated from cron:\n1. Enable fetch-crl-cron  [root@client ~]$ systemctl enable fetch-crl-cron    Start fetch-crl-cron  [root@client ~]$ systemctl start fetch-crl-cron    Reload daemons:  [root@client ~]$ systemctl daemon-reload", 
            "title": "CRLs updates"
        }, 
        {
            "location": "/admin/configure-cache-auth/#rhel6", 
            "text": "...to be added", 
            "title": "RHEL6"
        }, 
        {
            "location": "/admin/configure-cache-auth/#add-authfile-for-authenticated-cache", 
            "text": "Authfile for authenticated cache may differ from  /etc/xrootd/Authfile-noauth  defined in  non-authenticated cache configuration . Example:     [root@client ~]$ cat /etc/xrootd/Authfile-auth \n   g /osg/ligo /user/ligo r\n   u ligo /user/ligo lr / rl  When ready with configuration, please  register  and  start  your StashCache Cache server.", 
            "title": "Add Authfile for authenticated cache"
        }, 
        {
            "location": "/admin/configure-cache-optional/", 
            "text": "Optional configuration\n\n\nAdjust disk utilization\n\n\nTo adjust the disk utilization of your StashCache cache, modify the values of \npfc.diskusage\n in \n/etc/xrootd/xrootd-stashcache-cache-server.cfg\n:\n\n\npfc.diskusage 0.98 .99\n\n\n\n\nThe first value and second values correspond to the low and high usage watermarks, respectively, in percentages. When the high watermark is reached, the XRootD service will automatically purge cache objects down to the low watermark.\n\n\nEnable remote debugging\n\n\nThis feature enables remote debugging via the \ndigFS\n read-only file system, it's optional line in the \nconfig file\n:\n\n\nxrootd.diglib * /etc/xrootd/digauth.cf\n\n\n\n\nwhere \n/etc/xrootd/digauth.cf\n may have following content:\n\n\nall allow host h=abc.org\nall allow host h=*.xyz.edu\n\n\n\n\nWhen ready with configuration, please \nregister\n and \nstart\n your StashCache Cache server.", 
            "title": "Configure cache optional"
        }, 
        {
            "location": "/admin/configure-cache-optional/#optional-configuration", 
            "text": "", 
            "title": "Optional configuration"
        }, 
        {
            "location": "/admin/configure-cache-optional/#adjust-disk-utilization", 
            "text": "To adjust the disk utilization of your StashCache cache, modify the values of  pfc.diskusage  in  /etc/xrootd/xrootd-stashcache-cache-server.cfg :  pfc.diskusage 0.98 .99  The first value and second values correspond to the low and high usage watermarks, respectively, in percentages. When the high watermark is reached, the XRootD service will automatically purge cache objects down to the low watermark.", 
            "title": "Adjust disk utilization"
        }, 
        {
            "location": "/admin/configure-cache-optional/#enable-remote-debugging", 
            "text": "This feature enables remote debugging via the  digFS  read-only file system, it's optional line in the  config file :  xrootd.diglib * /etc/xrootd/digauth.cf  where  /etc/xrootd/digauth.cf  may have following content:  all allow host h=abc.org\nall allow host h=*.xyz.edu  When ready with configuration, please  register  and  start  your StashCache Cache server.", 
            "title": "Enable remote debugging"
        }, 
        {
            "location": "/admin/configure-origin/", 
            "text": "Configuring Origin Server\n\n\nPackages installed: \nstashcache-daemon fetch-crl stashcache-origin-server\n\n\nThe following section describes required configuration to have a functional StashCache Origin (not cache server!). StashCache Origin package \nstashcache-cache-origin\n needs to be manually configured from pre-existing XRootD configuration.\n\n\nOrigin server\n\n\nThe origin server connects only to a redirector (not directly to cache server), thus minimal xrootd configuration is required. \nStashCache-daemon\n package provides default configuration file \n/etc/xrootd/xrootd-stashcache-origin-server.cfg\n. Example of the configuration of origin server is as follows:\n\n\nall.export /\nset localroot = /stash\nxrd.port 1094\n\nall.role server\nall.manager redirector.osgstorage.org+ 1213\n\noss.localroot $(localroot)\nxrootd.trace emsg login stall redirect\nofs.trace none\nxrd.trace conn\ncms.trace all\nsec.protocol  host\nsec.protbind  * none\nall.adminpath /var/spool/xrootd\nall.pidpath /var/run/xrootd\n\n# Sending monitoring information\nxrd.report uct2-collectd.mwt2.org:9931\nxrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930\n\n\n\n\nRHEL7\n\n\nOn RHEL7 system, you need to run following systemd units:\n\n \nxrootd@stashcache-cache-origin.service\n\n\n \ncmsd@stashcache-cache-origin.service\n\n\nRHEL6\n\n\n...to be added\n\n\nWhen ready with configuration, please \nregister\n and \nstart\n your StashCache Origin server.", 
            "title": "Configure origin"
        }, 
        {
            "location": "/admin/configure-origin/#configuring-origin-server", 
            "text": "Packages installed:  stashcache-daemon fetch-crl stashcache-origin-server  The following section describes required configuration to have a functional StashCache Origin (not cache server!). StashCache Origin package  stashcache-cache-origin  needs to be manually configured from pre-existing XRootD configuration.", 
            "title": "Configuring Origin Server"
        }, 
        {
            "location": "/admin/configure-origin/#origin-server", 
            "text": "The origin server connects only to a redirector (not directly to cache server), thus minimal xrootd configuration is required.  StashCache-daemon  package provides default configuration file  /etc/xrootd/xrootd-stashcache-origin-server.cfg . Example of the configuration of origin server is as follows:  all.export /\nset localroot = /stash\nxrd.port 1094\n\nall.role server\nall.manager redirector.osgstorage.org+ 1213\n\noss.localroot $(localroot)\nxrootd.trace emsg login stall redirect\nofs.trace none\nxrd.trace conn\ncms.trace all\nsec.protocol  host\nsec.protbind  * none\nall.adminpath /var/spool/xrootd\nall.pidpath /var/run/xrootd\n\n# Sending monitoring information\nxrd.report uct2-collectd.mwt2.org:9931\nxrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930", 
            "title": "Origin server"
        }, 
        {
            "location": "/admin/configure-origin/#rhel7", 
            "text": "On RHEL7 system, you need to run following systemd units:   xrootd@stashcache-cache-origin.service    cmsd@stashcache-cache-origin.service", 
            "title": "RHEL7"
        }, 
        {
            "location": "/admin/configure-origin/#rhel6", 
            "text": "...to be added  When ready with configuration, please  register  and  start  your StashCache Origin server.", 
            "title": "RHEL6"
        }, 
        {
            "location": "/ops/register/", 
            "text": "Registering StashCache and RSV monitoring\n\n\nTo join in on the monitoring you'll need to Register your resource and send me some information about your cache instructions in the Configuring resource monitoring.\n\n\nYou can see the current state of affairs here:\n\n \nStatus history\n\n\n \nStatus details\n (click on the \"+\" sign for more detail)\n* \nAvailability metrics\n \n\n\nRegistering StashCache\n\n\nTo register a cache instance go \nhere\n (with a cert in your browser). Fill in the required fields, example is displayed below:\n\n\nRegistering StashCache resource information:\n\n\n\n\nThe site \nmust be\n \nOSG-GOC\n \n\n\nThe resource group \nmust be\n \nMonitored Caches\n\n\n\n\n\n\nRegistering StashCache resource services:\n\n\n\n\nThe service \nmust be\n XRootD component\n\n\n\n\n\n\n\nNote\n\n\nContact Information (will be pre-filled, add or modify as you see fit) - there are several types of contact, administrative and security are the most important to the GOC - \nDO NOT\n check the WLCG resource box; Add a Update comment if you'd like.\n\n\n\n\nConfirming and submitting StashCache resource registration:\n\n\n\n\nTou must click the \n\"Acceptable Use Policy\"\n checkbox\n\n\nHit the \nblue\n submit button.\n\n\n\n\nConfiguring resource monitoring for RSV\n\n\nE.g. for the Nebraska instance the status of the following command is checked: \n\n\n[user@client ~]$ xrdcp root://hcc-stash.unl.edu//stash/user/test.1M /tmp/dump\n\n\n\nIf the return status is zero, the cache is working, otherwise it is not. What we need from you is:\n* the equivalent \n//stash/user/test.1M\n a file you select that will always be there.\n\n\nWhen ready with registration, finish your configuration and \nstart\n your StashCache services.", 
            "title": "Register"
        }, 
        {
            "location": "/ops/register/#registering-stashcache-and-rsv-monitoring", 
            "text": "To join in on the monitoring you'll need to Register your resource and send me some information about your cache instructions in the Configuring resource monitoring.  You can see the current state of affairs here:   Status history    Status details  (click on the \"+\" sign for more detail)\n*  Availability metrics", 
            "title": "Registering StashCache and RSV monitoring"
        }, 
        {
            "location": "/ops/register/#registering-stashcache", 
            "text": "To register a cache instance go  here  (with a cert in your browser). Fill in the required fields, example is displayed below:", 
            "title": "Registering StashCache"
        }, 
        {
            "location": "/ops/register/#registering-stashcache-resource-information", 
            "text": "The site  must be   OSG-GOC    The resource group  must be   Monitored Caches", 
            "title": "Registering StashCache resource information:"
        }, 
        {
            "location": "/ops/register/#registering-stashcache-resource-services", 
            "text": "The service  must be  XRootD component    Note  Contact Information (will be pre-filled, add or modify as you see fit) - there are several types of contact, administrative and security are the most important to the GOC -  DO NOT  check the WLCG resource box; Add a Update comment if you'd like.", 
            "title": "Registering StashCache resource services:"
        }, 
        {
            "location": "/ops/register/#confirming-and-submitting-stashcache-resource-registration", 
            "text": "Tou must click the  \"Acceptable Use Policy\"  checkbox \nHit the  blue  submit button.", 
            "title": "Confirming and submitting StashCache resource registration:"
        }, 
        {
            "location": "/ops/register/#configuring-resource-monitoring-for-rsv", 
            "text": "E.g. for the Nebraska instance the status of the following command is checked:   [user@client ~]$ xrdcp root://hcc-stash.unl.edu//stash/user/test.1M /tmp/dump  If the return status is zero, the cache is working, otherwise it is not. What we need from you is:\n* the equivalent  //stash/user/test.1M  a file you select that will always be there.  When ready with registration, finish your configuration and  start  your StashCache services.", 
            "title": "Configuring resource monitoring for RSV"
        }, 
        {
            "location": "/ops/start/", 
            "text": "Managing StashCache and associated services\n\n\nEnsure that your \n/stash\n disk is mounted, and then start \nxrootd\n and \ncondor\n service.\n\n\nNon-authenticated Cache server services\n\n\n\n\n\n\n\n\nSoftware\n\n\nService name\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nXRootD\n\n\nxrootd@stashcache-cache-server.service\n\n\nRHEL7\n\n\n\n\n\n\nHTCondor\n\n\ncondor.service\n\n\nRHEL7\n\n\n\n\n\n\nFetch CRL\n\n\nfetch-crl-cron\n\n\nRHEL7\n\n\n\n\n\n\n\n\nAuthenticated Cache server services\n\n\n\n\n\n\n\n\nSoftware\n\n\nService name\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nXRootD\n\n\nxrootd@stashcache-cache-server-auth.service\n\n\nRHEL7\n\n\n\n\n\n\n\n\nxrootd-renew-proxy.service\n\n\nRHEL7\n\n\n\n\n\n\n\n\nxrootd-renew-proxy.timer\n\n\nRHEL7\n\n\n\n\n\n\nHTCondor\n\n\ncondor.service\n\n\nRHEL7\n\n\n\n\n\n\nFetch CRL\n\n\nfetch-crl-cron\n\n\nRHEL7\n\n\n\n\n\n\n\n\nTest Cache server reports to HTCondor collector\n\n\nTo verify that your cache is being monitored properly, run the following command:\n\n\n[user@client ~]$ condor_status -any -l -const \nName==\\\nxrootd@`hostname`\\\n\n\n\n\n\nWhere \nhostname\n is the string returned by the hostname command. The output of the above command should provide an HTCondor ClassAd that details the status of your cache.\n\n\nTest CVMFS accessibility via Cache server\n\n\n[user@client ~]$ curl -O http://cache_host:8000/user/dweitzel/public/blast/queries/query1\n\n\n\n\nOrigin server services\n\n\n\n\n\n\n\n\nSoftware\n\n\nService name\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nXRootD\n\n\nxrootd@stashcache-origin-server.service\n\n\nRHEL7\n\n\n\n\n\n\nXRootD\n\n\ncmsd@stashcache-origin-server.service\n\n\nRHEL7\n\n\n\n\n\n\n\n\nTest Origin server availability in Stash Federation\n\n\nTo verify that your origin is being subscribed to the redirector, run the following command:\n\n\n[user@client ~]$ xrdmapc --list s redirector.opensciencegrid.org:1094 \n0**** redirector.grid.iu.edu:1094\n      Srv redirector1.grid.iu.edu:2094\n      Srv csiu.grid.iu.edu:1094\n      Srv stash.osgconnect.net:1094\n      Srv stashcache.fnal.gov:1094\n      Srv redirector2.grid.iu.edu:2094\n      Srv ceph-gridftp1.grid.uchicago.edu:1094\n\n\n\n\nThe output should list hostname of your service. If not, look for any sings of trouble in the log files or contact us at \nstashcache@opensciencegrid.org\n.\n\n\nStart/stop services\n\n\n\n\n\n\n\n\nTo...\n\n\nRun the command...\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nStart a service\n\n\nsystemctl start SERVICE-NAME\n\n\nRHEL7\n\n\n\n\n\n\nStop a service\n\n\nsystemctl stop SERVICE-NAME\n\n\nRHEL7\n\n\n\n\n\n\nStatus\n\n\nsystemctl status SERVICE-NAME\n\n\nRHEL7\n\n\n\n\n\n\nEnable\n\n\nsystemctl enable SERVICE-NAME\n\n\nRHEL7", 
            "title": "Start"
        }, 
        {
            "location": "/ops/start/#managing-stashcache-and-associated-services", 
            "text": "Ensure that your  /stash  disk is mounted, and then start  xrootd  and  condor  service.", 
            "title": "Managing StashCache and associated services"
        }, 
        {
            "location": "/ops/start/#non-authenticated-cache-server-services", 
            "text": "Software  Service name  Notes      XRootD  xrootd@stashcache-cache-server.service  RHEL7    HTCondor  condor.service  RHEL7    Fetch CRL  fetch-crl-cron  RHEL7", 
            "title": "Non-authenticated Cache server services"
        }, 
        {
            "location": "/ops/start/#authenticated-cache-server-services", 
            "text": "Software  Service name  Notes      XRootD  xrootd@stashcache-cache-server-auth.service  RHEL7     xrootd-renew-proxy.service  RHEL7     xrootd-renew-proxy.timer  RHEL7    HTCondor  condor.service  RHEL7    Fetch CRL  fetch-crl-cron  RHEL7", 
            "title": "Authenticated Cache server services"
        }, 
        {
            "location": "/ops/start/#test-cache-server-reports-to-htcondor-collector", 
            "text": "To verify that your cache is being monitored properly, run the following command:  [user@client ~]$ condor_status -any -l -const  Name==\\ xrootd@`hostname`\\   Where  hostname  is the string returned by the hostname command. The output of the above command should provide an HTCondor ClassAd that details the status of your cache.", 
            "title": "Test Cache server reports to HTCondor collector"
        }, 
        {
            "location": "/ops/start/#test-cvmfs-accessibility-via-cache-server", 
            "text": "[user@client ~]$ curl -O http://cache_host:8000/user/dweitzel/public/blast/queries/query1", 
            "title": "Test CVMFS accessibility via Cache server"
        }, 
        {
            "location": "/ops/start/#origin-server-services", 
            "text": "Software  Service name  Notes      XRootD  xrootd@stashcache-origin-server.service  RHEL7    XRootD  cmsd@stashcache-origin-server.service  RHEL7", 
            "title": "Origin server services"
        }, 
        {
            "location": "/ops/start/#test-origin-server-availability-in-stash-federation", 
            "text": "To verify that your origin is being subscribed to the redirector, run the following command:  [user@client ~]$ xrdmapc --list s redirector.opensciencegrid.org:1094 \n0**** redirector.grid.iu.edu:1094\n      Srv redirector1.grid.iu.edu:2094\n      Srv csiu.grid.iu.edu:1094\n      Srv stash.osgconnect.net:1094\n      Srv stashcache.fnal.gov:1094\n      Srv redirector2.grid.iu.edu:2094\n      Srv ceph-gridftp1.grid.uchicago.edu:1094  The output should list hostname of your service. If not, look for any sings of trouble in the log files or contact us at  stashcache@opensciencegrid.org .", 
            "title": "Test Origin server availability in Stash Federation"
        }, 
        {
            "location": "/ops/start/#startstop-services", 
            "text": "To...  Run the command...  Notes      Start a service  systemctl start SERVICE-NAME  RHEL7    Stop a service  systemctl stop SERVICE-NAME  RHEL7    Status  systemctl status SERVICE-NAME  RHEL7    Enable  systemctl enable SERVICE-NAME  RHEL7", 
            "title": "Start/stop services"
        }, 
        {
            "location": "/ops/upgrades/", 
            "text": "OSG StashCache Upgrade Status\n\n\nThis page is used to track the status of hardware and software used for the StashCache service within the OSG community. Please update your status when you complete an upgrade. Currently monitored StashCache resources (Origins, Caches, Redirectors) are included in the \nRSV tests\n.\n\n\n2017 Table of Caches\n\n\n\n\n\n\n\n\nHosting site\n\n\nHostname\n\n\nXRootD version\n\n\nOS\n\n\nCPU\n\n\nRAM\n\n\nDisk (cache) space\n\n\nDisk configuration\n\n\nConnectivity\n\n\nNotes\n\n\nLast update\n\n\n\n\n\n\n\n\n\n\nSyracuse\n\n\nits-condor-xrootd1.syr.edu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBNL\n\n\nosgxroot.usatlas.bnl.gov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFZU\n\n\nnovastore.farm.particle.cz\n\n\n4.4.0\n\n\n\n\n2x Xeon(R) E5-2630 @2.30GHz\n\n\n32GB\n\n\n30TB\n\n\n12x3TB, RAID6, XFS\n\n\n10Gbps\n\n\n\n\n10-28-2016\n\n\n\n\n\n\nNebraska\n\n\nhcc-stash.unl.edu\n\n\n4.6.1-0.2.pre3.hcc\n\n\nCentOS 7.2.1511\n\n\n2x Xeon (R) E5530 @2.4GHz w/HT (8 real cores)\n\n\n24GB\n\n\n19TB\n\n\n12x 2TB SATA in RAID6, XFS\n\n\n10Gbps\n\n\n\n\n04-06-2017\n\n\n\n\n\n\nUChicago\n\n\nstashcache.grid.uchicago.edu\n\n\n4.6.1-0.2.pre3.hcc\n\n\nSL 7.2\n\n\n2x Xeon(R) E5440 @2.83GHz\n\n\n32GB\n\n\n60TB\n\n\n5x 12TB arrays, RAID6, XFS, bound with oss.space\n\n\n2x10Gbps\n\n\nOld dCache node, probably not optimally tuned for XRootD\n\n\n04-06-2017\n\n\n\n\n\n\nUIllinois\n\n\nmwt2-stashcache.campuscluster.illinois.edu\n\n\n4.6.1-0.2.rc3.osg33\n\n\n\n\nVM 4CPUS\n\n\n16GB\n\n\n100TB\n\n\nGPFS on DDN via FDR IB\n\n\n10Gbps\n\n\n\n\n04-28-2017\n\n\n\n\n\n\nUCSD\n\n\nxrd-cache-1.t2.ucsd.edu\n\n\n4.5.0-0.5.beta\n\n\nCentOS 6.8\n\n\n2x Xeon(R) E5-2650 v3 @2.30GHz w/HT (40 cores total)\n\n\n128GB\n\n\n21.8TB\n\n\n6x 3.6TB, XFS, individual disks bound with oss.space\n\n\n10Gbps\n\n\nThe same machine runs hdfs-healing xrootd cache on another set of 6 independent disks. We can move more disks to StashCache if needed.\n\n\n10-28-2016\n\n\n\n\n\n\n\n\n2017 Milestones\n\n\n\n\ndeploy IPv4 and IPv6 enabled XRootD caches\n...\n\n\n\n\n2016 Table of Caches\n\n\n...in order to keep history will add later from \ntwiki", 
            "title": "Upgrades"
        }, 
        {
            "location": "/ops/upgrades/#osg-stashcache-upgrade-status", 
            "text": "This page is used to track the status of hardware and software used for the StashCache service within the OSG community. Please update your status when you complete an upgrade. Currently monitored StashCache resources (Origins, Caches, Redirectors) are included in the  RSV tests .", 
            "title": "OSG StashCache Upgrade Status"
        }, 
        {
            "location": "/ops/upgrades/#2017-table-of-caches", 
            "text": "Hosting site  Hostname  XRootD version  OS  CPU  RAM  Disk (cache) space  Disk configuration  Connectivity  Notes  Last update      Syracuse  its-condor-xrootd1.syr.edu             BNL  osgxroot.usatlas.bnl.gov             FZU  novastore.farm.particle.cz  4.4.0   2x Xeon(R) E5-2630 @2.30GHz  32GB  30TB  12x3TB, RAID6, XFS  10Gbps   10-28-2016    Nebraska  hcc-stash.unl.edu  4.6.1-0.2.pre3.hcc  CentOS 7.2.1511  2x Xeon (R) E5530 @2.4GHz w/HT (8 real cores)  24GB  19TB  12x 2TB SATA in RAID6, XFS  10Gbps   04-06-2017    UChicago  stashcache.grid.uchicago.edu  4.6.1-0.2.pre3.hcc  SL 7.2  2x Xeon(R) E5440 @2.83GHz  32GB  60TB  5x 12TB arrays, RAID6, XFS, bound with oss.space  2x10Gbps  Old dCache node, probably not optimally tuned for XRootD  04-06-2017    UIllinois  mwt2-stashcache.campuscluster.illinois.edu  4.6.1-0.2.rc3.osg33   VM 4CPUS  16GB  100TB  GPFS on DDN via FDR IB  10Gbps   04-28-2017    UCSD  xrd-cache-1.t2.ucsd.edu  4.5.0-0.5.beta  CentOS 6.8  2x Xeon(R) E5-2650 v3 @2.30GHz w/HT (40 cores total)  128GB  21.8TB  6x 3.6TB, XFS, individual disks bound with oss.space  10Gbps  The same machine runs hdfs-healing xrootd cache on another set of 6 independent disks. We can move more disks to StashCache if needed.  10-28-2016", 
            "title": "2017 Table of Caches"
        }, 
        {
            "location": "/ops/upgrades/#2017-milestones", 
            "text": "deploy IPv4 and IPv6 enabled XRootD caches\n...", 
            "title": "2017 Milestones"
        }, 
        {
            "location": "/ops/upgrades/#2016-table-of-caches", 
            "text": "...in order to keep history will add later from  twiki", 
            "title": "2016 Table of Caches"
        }
    ]
}